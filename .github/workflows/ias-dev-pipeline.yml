# Copyright 2020 Google, LLC.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Deploy Carrinho Digital INFRA

on:
  push:
    branches:
      - master

env:
  ENV: dev
  VERSION: 1-0
  ZONE: us-central1-a
  TF_VERSION: "latest"
  SALT: ${{ secrets.SALT }}
  PROJECT_ID: carrinhodigital
  SECRET: ${{ secrets.SECRET }}
  ISSUER: ${{ secrets.ISSUER }}
  REPOSITORY: ${{ github.repository }}
  AUDIENCE: ${{ secrets.AUDIENCE }}
  MONGODB_URI: ${{ secrets.MONGODB_URI }}
  GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
  CURRENT_DIR: /home/runner/work/webpi-infrastructure/webpi-infrastructure
  TF_WORKING_DIR: "./terraform"
  GOOGLE_APPLICATION_CREDENTIALS: /home/runner/work/webpi-infrastructure/webpi-infrastructure

jobs:
  packer-terraform:
    runs-on: ubuntu-latest
    name: packer

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: "Setup GCP"
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: "286.0.0"
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ env.GCP_CREDENTIALS }}
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true

      - name: "Retriving GCE Images"
        id: images
        run: |
          gcloud config set project $PROJECT_ID
          echo "##[set-output name=image;]$(gcloud compute images list --filter="name~'$ENV-webapi-$VERSION'" | sed -n 2p)"

      # - name: "Creating GOOGLE_APPLICATION_CREDENTIALS"
      #   run: |
      #     cat > ${{ env.GOOGLE_APPLICATION_CREDENTIALS }}/credential.json <<EOF
      #       ${{ env.GCP_CREDENTIALS }}
      #     EOF

      - name: "Check image already exists"
        id: image_exists
        run: |
          echo ${{steps.images.outputs.image}}
          [ -z "${{steps.images.outputs.image}}" ] && echo "Empty" || echo "Not empty"
          echo "##[set-output name=is_empty;]$([ -z "${{steps.images.outputs.image}}" ])"

      - name: Validate Template
        if: steps.image_exists.outputs.is_empty
        uses: operatehappy/packer-github-actions@master
        with:
          command: validate
          arguments: -syntax-only
          target: packer/webapi.json

      - name: Build Artifact
        if: steps.image_exists.outputs.is_empty
        uses: operatehappy/packer-github-actions@master
        with:
          command: build
          arguments: "-force"
          target: packer/webapi.json

      - name: Proof
        run: |
          echo $GOOGLE_APPLICATION_CREDENTIALS

      - name: Terraform Init
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.TF_VERSION }}
          tf_actions_subcommand: "init"
          tf_actions_working_dir: ${{ env.TF_WORKING_DIR }}
          tf_actions_comment: true
          args: '-force-copy -input=false -backend-config="token=${{ secrets.TERRAFORM_CLOUD_TOKEN }}"'
        env:
          TF_WORKSPACE: ${{ env.ENV }}
          TF_VAR_image_name: "webapi"
          TF_VAR_image_version: ${{ env.VERSION }}
          TF_VAR_credential: $GOOGLE_APPLICATION_CREDENTIALS

      - name: Terraform Plan
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.TF_VERSION }}
          tf_actions_subcommand: "plan"
          tf_actions_working_dir: ${{ env.TF_WORKING_DIR }}
          tf_actions_comment: true
        env:
          TF_VAR_image_name: "webapi"
          TF_VAR_image_version: ${{ env.VERSION }}
          TF_VAR_credential: $GOOGLE_APPLICATION_CREDENTIALS
          TF_WORKSPACE: ${{ env.ENV }}

      - name: Terraform Apply
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.TF_VERSION }}
          tf_actions_subcommand: "apply"
          tf_actions_working_dir: ${{ env.TF_WORKING_DIR }}
          tf_actions_comment: true
        env:
          TF_VAR_image_name: "webapi"
          TF_VAR_image_version: ${{ env.VERSION }}
          TF_VAR_credential: $GOOGLE_APPLICATION_CREDENTIALS
          TF_WORKSPACE: ${{ env.ENV }}
